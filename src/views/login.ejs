<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>NudeAdmin - Login</title>
  <link rel="stylesheet" href="/assets/theme.css" />
  <link rel="stylesheet" href="/static/css/style.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
  <script defer src="/shared/client/toast.js"></script>
  <script defer src="/shared/client/auth-modal.js"></script>
</head>
<body style="margin:0;">
  <div id="toast-root" class="toast-root" aria-live="polite" aria-atomic="false"></div>
  <!-- Auth overlay markup (signup disabled in admin) -->
  <div id="authOverlay" class="auth-overlay" role="dialog" aria-modal="true" aria-labelledby="authTitle" hidden>
    <div class="auth-modal" role="document" data-admin-bootstrap>
      <!-- Close button intentionally removed for admin bootstrap/login lockdown -->
      <div class="auth-header">
        <h2 id="authTitle" class="auth-title">Admin Login</h2>
        <div class="auth-tabs" role="tablist" aria-label="Authentication">
          <button class="auth-tab active" role="tab" aria-selected="true" aria-controls="authLoginPanel" id="authLoginTab">Log in</button>
          <button class="auth-tab" role="tab" aria-selected="false" aria-controls="authSignupPanel" id="authSignupTab" hidden>Sign up</button>
        </div>
      </div>
      <div class="auth-body">
        <form id="authLoginPanel" class="auth-form" role="tabpanel" aria-labelledby="authLoginTab">
          <div class="auth-field">
            <label for="loginEmail">Email or Username</label>
            <input id="loginEmail" type="text" class="auth-input" placeholder="admin@example.com or admin" autocomplete="username">
          </div>
          <div class="auth-field">
            <label for="loginPassword">Password</label>
            <input id="loginPassword" type="password" class="auth-input" placeholder="••••••••" autocomplete="current-password">
          </div>
          <div class="auth-actions">
            <button type="button" class="btn-success-solid auth-submit" data-mode="login">Log in</button>
          </div>
        </form>
        <form id="authSignupPanel" class="auth-form" role="tabpanel" aria-labelledby="authSignupTab" hidden>
          <div class="auth-field">
            <label for="signupEmail">Email</label>
            <input id="signupEmail" type="email" class="auth-input" placeholder="admin@example.com" autocomplete="email">
          </div>
          <div class="auth-field">
            <label for="signupUsername">Username</label>
            <input id="signupUsername" type="text" class="auth-input" placeholder="admin" autocomplete="username">
          </div>
          <div class="auth-field">
            <label for="signupPassword">Password</label>
            <input id="signupPassword" type="password" class="auth-input" placeholder="Create password (min 6)" autocomplete="new-password">
          </div>
          <div class="auth-field password-strength" aria-live="polite">
            <div class="pw-meter" id="signupPwMeter" data-score="0">
              <span class="pw-bar"></span>
            </div>
            <small id="signupPwFeedback" class="pw-feedback text-dim">Enter a password</small>
          </div>
          <div class="auth-actions">
            <button type="button" class="btn-info auth-submit" data-mode="signup">Create admin</button>
          </div>
          <p class="text-dim" style="margin:.5rem 0 0 .15rem; font-size:.6rem;">First account will be granted admin role automatically.</p>
        </form>
      </div>
      <p class="auth-note text-dim" style="margin:.75rem 0 0 .25rem; font-size:.65rem;">Sign up disabled for admin panel.</p>
    </div>
  </div>
  <script>
  (function(){
    function openLogin(){
      const opener = document.getElementById('authOpenBtn');
      if(opener) opener.click();
    }
    // Inject minimal button for auth-modal.js expectations
    const btn=document.createElement('button');
    btn.id='authOpenBtn';
    btn.type='button';
    btn.style.display='none';
    document.body.appendChild(btn);
    // Observe login success via polling /auth/me after auth-modal sets local flag
    const CHECK_INTERVAL=2500;
    let fallbackTimer;
    function fallbackCheck(){
      fetch('/auth/me').then(r=>r.json().catch(()=>({}))).then(j=>{
        if(j && j.user){ window.location.replace('/dashboard'); }
        else fallbackTimer = setTimeout(fallbackCheck, CHECK_INTERVAL);
      }).catch(()=> fallbackTimer = setTimeout(fallbackCheck, CHECK_INTERVAL));
    }
    window.addEventListener('auth:login-success', ()=>{ window.location.replace('/dashboard'); });

    // Bootstrap check: if no admin exists enable signup tab + panel
    fetch('/auth/bootstrap/admin-needed').then(r=>r.json().catch(()=>({}))).then(j=>{
      const signupTab=document.getElementById('authSignupTab');
      const signupPanel=document.getElementById('authSignupPanel');
      const loginTab=document.getElementById('authLoginTab');
      const loginPanel=document.getElementById('authLoginPanel');
      const note=document.querySelector('.auth-note');
      if(j && j.adminNeeded){
        // Enable signup only, hide login tab/panel and auto-open signup
        if(signupTab && signupPanel){
          signupTab.hidden=true; // hide the tab label to prevent switching
          signupPanel.hidden=false; signupPanel.setAttribute('aria-hidden','false');
        }
        if(loginTab){ loginTab.hidden=true; }
        if(loginPanel){ loginPanel.hidden=true; }
        if(note) note.textContent='Create the first admin account (required).';
        document.getElementById('signupEmail')?.focus();
      } else {
        // Normal login only (signup removed) once an admin exists
        if(signupTab) signupTab.remove();
        if(signupPanel) signupPanel.remove();
        if(note) note.textContent='Sign up disabled for admin panel.';
        document.getElementById('loginEmail')?.focus();
      }
      openLogin();
      fallbackCheck();
    }).catch(()=>{ openLogin(); fallbackCheck(); });
  })();
  </script>
</body>
</html>
